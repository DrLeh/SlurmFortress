@page "/apicall"
@inject ISlurmsClient Client

<PageTitle>ASI SlurmFortress</PageTitle>

<Button Color="Color.Primary" Clicked="GetSampleAsync">Load Sample entity</Button>

@if (Loading)
{
    <Loading />
}
else if (Slurm == null)
{
    <Paragraph>Sample Entity not found</Paragraph>

}
else
{
    <Div>
        <Heading>Sample Entity Id=@Slurm.Id</Heading>
        <Table>
            <TableHeader>
                <TableRow>
                    <TableHeaderCell>Id</TableHeaderCell>
                    <TableHeaderCell>Name</TableHeaderCell>
                    <TableHeaderCell>Description</TableHeaderCell>
                </TableRow>
            </TableHeader>
            <TableBody>
                <TableRow>
                    <TableRowCell>@Slurm.Id</TableRowCell>
                </TableRow>

            </TableBody>
        </Table>

    </Div>
}

<SnackbarStack @ref="snackbar" Location="SnackbarStackLocation.Center" />

@code {
    SnackbarStack snackbar;
    private bool Loading = true;
    private SlurmView? Slurm { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetSampleAsync();
    }

    private async Task GetSampleAsync()
    {
        Loading = true;
        try
        {
            Slurm = await Client.GetSampleEntityAsync();
            await snackbar.PushAsync($"Successfully Slurm Id={Slurm.Id}", SnackbarColor.Success);
        }
        catch
        {
            Slurm = null;
            await snackbar.PushAsync($"Failed to load Sample entity", SnackbarColor.Danger);
        }
        finally
        {
            Loading = false;
        }
    }
}